class Solution {
  public:
    static bool cmp(const tuple<int,int,int> &a, const tuple<int,int,int> &b){
        return get<2>(a) < get<2>(b); 
    }

    vector<int> maxMeetings(int N, vector<int> &S, vector<int> &F) {
        vector<tuple<int,int,int>> v; 
        for (int i = 0; i < N; i++) {
            v.push_back({i+1, S[i], F[i]}); 
        }
        sort(v.begin(), v.end(), cmp);

        vector<int> ans;
        ans.push_back(get<0>(v[0]));
        int ansEnd = get<2>(v[0]);

        for (int i = 1; i < N; i++) {
            if (get<1>(v[i]) > ansEnd) {
                ans.push_back(get<0>(v[i]));
                ansEnd = get<2>(v[i]);
            }
        }
        return ans;
    }
};
