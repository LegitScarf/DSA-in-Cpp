#include <iostream>
#include<vector>
using namespace std;

int partition(int *arr, int s, int e){
  int pivot = arr[s];
  int count = 0;
  
  for(int i=s+1; i<e; i++){
    if(arr[i] < pivot){
      count++;
    }
  }
  
  int pivotIndex = s + count;
  swap(arr[s], arr[pivotIndex]);
  
  int i = s;
  int j = e;
  
  while(i<pivotIndex && j>pivotIndex){
    while(arr[i]<=pivot){
      i++;
    }
    
    while(arr[j]>pivot){
      j--;
    }
    
    if(i<pivotIndex && j>pivotIndex){
      swap(arr[i++], arr[j--]);
    }
  }
  
  return pivotIndex;
}


void QuickSort(int *arr, int s, int e){
  //base case
  if(s >= e){
    return;
  }
  
  //partition
  int p = partition(arr, s, e);
  
  //recursion
  QuickSort(arr, s, p-1);
  QuickSort(arr, p+1, e);;
  
}

int main(){
  
  int arr[6] = {2,1,4,9,5,0};
  Quicksort(arr, 0, 5);
  
  for(int i=0; i<5; i++){
    cout << arr[i] <<" ";
  }cout<<endl;
  
  return 0;
  
}