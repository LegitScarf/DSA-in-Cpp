class Solution {
  private:
    int solve(int n, vector<int>& arr, int currIndex, int prevIndex, vector<vector<int>>& dp){
        if(currIndex == n) return 0;
        
        if(dp[currIndex][prevIndex+1] != -1) return dp[currIndex][prevIndex+1];
        
        int include = 0;
        if(prevIndex == -1 || arr[currIndex] > arr[prevIndex]){
            include = 1 + solve(n, arr, currIndex+1, currIndex, dp);
        }
        int exclude = solve(n, arr, currIndex+1, prevIndex, dp);
        
        dp[currIndex][prevIndex+1] = max(include, exclude);
        return dp[currIndex][prevIndex+1];
    }
  public:
    int lis(vector<int>& arr) { 
        int n = arr.size();
        vector<vector<int>>dp (n, vector<int>(n+1, -1));
        return solve(n, arr, 0, -1, dp);
        
    }
};