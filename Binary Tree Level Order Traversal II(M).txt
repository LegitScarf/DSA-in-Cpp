class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<int> result;
        vector<vector<int>> ans;
        if(root == nullptr) return ans;

        queue<TreeNode*> q;
        q.push(root);
        q.push(nullptr);

        while(!q.empty()){
            TreeNode* temp = q.front();
            q.pop();

            if(temp != nullptr){
                if(temp->left) q.push(temp->left);
                if(temp->right) q.push(temp->right);
                result.push_back(temp->val);
            }

            else{
                ans.push_back(result);
                result.clear();
                if(!q.empty()) q.push(nullptr);
            }
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};