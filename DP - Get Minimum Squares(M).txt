class Solution {
  private:
    int solve(int n, vector<int>& dp){
        if(n == 0) return 0;
        
        if(dp[n] != -1) return dp[n];
        int min_squares = n;
        for(int i=1; i*i<=n; i++){
            min_squares = min(min_squares, 1+solve(n-i*i,dp));
        }
        dp[n] = min_squares;
        return dp[n];
    }
    int solveTab(int n){
        vector<int> dp(n+1, INT_MAX);
        dp[0] = 0;
        
        for(int i=1; i<=n; i++){
            for(int j=1; j*j<=n; j++){
                if(i-j*j >= 0) dp[i] = min(dp[i],1+dp[i-j*j]);
            }
        }
        return dp[n];
    }
  public:
    int MinSquares(int n) {
        //vector<int> dp(n+1,-1);
        return solveTab(n);
    }
};