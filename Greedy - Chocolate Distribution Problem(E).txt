class Solution {
  public:
    int findMinDiff(vector<int>& a, int m) {
        sort(a.begin(), a.end());
        int i = 0;
        int j = m-1;
        int n = a.size();
        int mini = INT_MAX;
        
        while(j<n){
            int diff = a[j] - a[i];
            mini = min(mini, diff);
            i++;
            j++;
        }
        return mini;
        
    }
};


class Solution {
  public:
    int findMinDiff(vector<int>& a, int m) {
        sort(a.begin(),a.end());
        int n = a.size();
        vector<int> arr(m);
        int mini = INT_MAX;
        int index = 0;
        
        while (index + m <= n){
            for(int i=0; i<m; i++){
                arr[i] = a[i+index];
            }
            int maxi = *max_element(arr.begin(), arr.end());
            int lowest = arr[0];
            mini = min(mini, maxi-lowest);
            index++;
        }
        return mini;
        
    }
};
