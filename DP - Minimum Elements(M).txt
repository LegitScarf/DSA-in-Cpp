#include <bits/stdc++.h>
int solveRec(vector<int> &num, int x){
    if(x == 0) return 0;
    if(x < 0) return INT_MAX;

    int mini = INT_MAX;
    for(int i=0; i<num.size(); i++){
        int ans = solveRec(num, x-num[i]);
        if(ans != INT_MAX) mini = min(mini, 1+ans);
    }
    return mini;
} 
int solveMem(vector<int> &num, int x, vector<int>& dp){
    if(x == 0) return 0;
    if(x < 0) return INT_MAX;

    int mini = INT_MAX;
    if(dp[x] != INT_MAX) return dp[x];

    for(int i=0; i<num.size(); i++){
        int ans = solveMem(num, x-num[i],dp);
        if(ans != INT_MAX) mini = min(mini, 1+ans);
    }
    dp[x] = mini;

    return dp[x];
}
int minimumElements(vector<int> &num, int x)
{
   vector<int> dp(x+1,INT_MAX); 
   int ans = solveMem(num,x,dp);
   if(ans == INT_MAX) return -1;
   else return ans;

}