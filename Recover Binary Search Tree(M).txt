class Solution {
private:
    TreeNode* first = nullptr;
    TreeNode* second = nullptr;
    TreeNode* prev = nullptr;

    void inorder(TreeNode* root){
        if(root == nullptr) return;

        inorder(root->left);
        if(prev && prev->val > root->val) {
            if(!first) first = prev;
            second = root;
        }
        prev = root;
        inorder(root->right);
    }
    
public:
    void recoverTree(TreeNode* root) {
        if(!root) return ;

        inorder(root);
        if(first && second) swap(first->val, second->val);
    }
};