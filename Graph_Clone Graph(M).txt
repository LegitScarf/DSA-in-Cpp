class Solution {
public:
    unordered_map<Node*, Node*> visited;

    Node* cloneGraph(Node* node) {
        if(!node) return nullptr;
        if(visited.find(node) != visited.end())
            return visited[node];

        Node* clone = enew Node();
        clone->val = node->val;
        visited[node] = clone;

        for(auto neighbor : node->neighbors) {
            clone->neighbors.push_back(cloneGraph(neighbor));
        }

        return clone;
    }
};
