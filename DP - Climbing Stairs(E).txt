class Solution {
private:
    // int solve(int n, int i, vector<int>& dp){
    //     //memoization  
    //     if(i == n) return 1;
    //     if(i > n) return 0;

    //     if(dp[i] != -1) return dp[i];
    //     dp[i] = (solve(n,i+1,dp) + solve(n,i+2,dp));
    //     return dp[i];
    // }
    int solve(int n){
        //Tabulation
        if(n == 0 || n == 1) return 1;
        vector<int> dp(n+1);
        dp[0] = 1;
        dp[1] = 1;

        for(int i=2; i<=n; i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        return dp[n];
    } 
public:
    // int climbStairs(int n) {
    //     vector<int> dp(n+1,-1);
    //     int ans = solve(n,0,dp);
    //     return ans;
    // }
    int climbStairs(int n) {
        int ans = solve(n);
        return ans;
    }
};
